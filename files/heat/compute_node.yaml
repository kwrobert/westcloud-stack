#####################################################################################################
# Script: compute_node.yaml
# Author: Kyle Robertson
# Date: September 18, 2015
# Description: A HEAT template that deploys the compute nodes in the TORQUE PBS job schedular architecture. 
# This node runs the pbs_mom service and all the users jobs   
#####################################################################################################


heat_template_version: 2018-08-31
description: Homogenous compute cluster 
parameters:
  image:
    type: string
    description: Image used for servers
  key_name:
    type: string
    description: SSH key to connect to the servers
  flavor:
    type: string
    description: flavor used by the servers
  network:
    type: string
    description: Network used by the server
  sec_group:
    type: string
    description: Security group for headnodes
  metadata:
    type: json
    description: Metadata to add to instance
  data_volume_size:
    type: number
    description: Size of the persistent data volume in GB
  # name: 
  #   type: string
  #   description: Name of the instance. Provided by compute_node_cluster.yaml

resources:
  server:
    type: OS::Nova::Server
    properties:
      # name: {get_param: name}
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      networks: [network: {get_param: network}]
      security_groups: [{get_param: sec_group}]
      metadata: 
        map_merge:
          - {'ansible_host_groups': 'compute'}
          - {get_param: metadata }
      user_data_format: RAW
      user_data: {get_file: cloud-init.sh}

  data_volume:
    type: OS::Cinder::Volume
    properties:
      description: Data volume for the compute node
      name: 
        list_join: ["-", [{get_attr: [server, name]}, "data-vol"]]
      size: {get_param: data_volume_size}

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: {get_resource: server}
      volume_id: {get_resource: data_volume}
      mountpoint: /dev/vdc

outputs:
  server_ip:
    description: IP Address of the load-balanced server.
    value: { get_attr: [server, first_address] }
