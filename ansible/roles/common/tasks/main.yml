---
# This playbook contains common plays that will be run on all nodes.

- name: Update/upgrade existing packages
  become: yes
  become_method: sudo
  apt:
    update_cache: yes
    upgrade: yes

- name: Install packages
  become: yes
  become_method: sudo
  apt:
    name:
      - python-pip
      - python-dev
      - python-tk
      - python3
      - python3-pip
      - python3-dev
      - python3-tk
      - libsuitesparse-dev
      - libfftw3-dev
      - libopenblas-dev
      - libssl-dev
      - libffi-dev
      - build-essential
      - zsh
      - htop
    state: latest
    force_apt_get: yes

# Become root so packages get installed system-wide
# - name: Install global Python packages
#   become: yes
#   become_method: sudo
#   pip:
#     # Done this way so Ansible doesn't make a separate SSH connection for each
#     # package, but instead installs them all with a single call to pip
#     name: "{{ python_global_packages | join(' ') }}"
#     executable: /usr/bin/pip3
#     state: latest

- name: Update /etc/hosts
  lineinfile:
    dest: /etc/hosts
    # regexp: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}.*{{ item }}$"
    # line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{item}}"
    regexp: "{{ hostvars[item]['ansible_host'] }}.*{{ item }}$"
    line: "{{ hostvars[item]['ansible_host'] }} {{item}}"
    state: present
  become: yes
  become_method: sudo
  with_items: "{{ groups.all }}"

- name: Create /mnt/data directory
  become: yes
  become_method: sudo
  file: 
    path: /mnt/data
    state: directory
    owner: ubuntu
    group: ubuntu
    recurse: yes

- name: Upload dispy service file
  tags: ['dispy']
  become: yes
  become_method: sudo
  copy:
    src: ../files/dispynode.service  
    dest: /etc/systemd/system/
    owner: root
    group: root

- name: Upload template dispynode config file
  tags: ['dispy']
  become: yes
  become_method: sudo
  template:
    src: dispynode.j2
    dest: /etc/dispynode.conf
    owner: root
    group: root

# Start the dispy systemd service on all nodes
- name: Start dispy service
  tags: ['dispy']
  become: yes
  become_method: sudo
  systemd:  
    name: dispynode.service
    daemon_reload: yes
    state: restarted
    enabled: yes
